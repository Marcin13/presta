# Stage 1: Build Stage - PHP with required extensions
FROM php:8.1-fpm-alpine AS build-stage

# Install basic dependencies
RUN apk add --no-cache \
    zip \
    gnupg \
    curl \
    lsb-release \
    ca-certificates \
    libjpeg-turbo-dev \
    freetype-dev \
    libzip-dev \
    icu-dev \
    libxml2-dev \
    oniguruma-dev \
    curl-dev \
    zlib-dev


# Configure and install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd curl dom fileinfo intl mbstring pdo pdo_mysql mysqli xml simplexml zip opcache bcmath

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install igbinary & memcached extensions
RUN apk add --no-cache libmemcached-libs zlib \
    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS libmemcached-dev cyrus-sasl-dev \
    && pecl install igbinary \
    && pecl install memcached \
    && docker-php-ext-enable igbinary memcached \
    && apk del .build-deps

# # Install ImageMagick and imagick extension
# RUN apk add --no-cache imagemagick-dev libgomp \
#     && pecl install imagick \
#     && docker-php-ext-enable imagick

# Stage 2: Final Stage - Use scratch for a smaller image

RUN mkdir -p /var/www/html
# Set the working directory
WORKDIR /var/www/html
RUN chown -R www-data:www-data /var/www/html && chmod -R 777 /var/www/html


# Expose PHP-FPM port
EXPOSE 9000

# Start PHP-FPM
CMD ["php-fpm"]
